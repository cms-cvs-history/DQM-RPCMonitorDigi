process TEST = {
       source = PoolSource {
                untracked string fileName = "00000001_FilterUnitFramework_0_0.root"
                untracked int32 maxEvents = 100
		untracked string moduleLogName= "RPCDigiDQM"
       }
	
	module rpcunpacker = RPCUnpackingModule{
                untracked bool PrintOut = false  
		untracked bool PrintHexDump = false
                untracked bool runDQM = false
	}
	

	module rpcdigidqm = RPCMonitorDigi{}

	service = MessageLogger {
    		vstring destinations = {"RpcUnpacker.log"}
                PSet RpcUnpacker.log     = { bool noLineBreaks = true   }
                PSet detailedInfo.txt = { int32  lineLength = 132    } 
       }

	

        service = DaqMonitorROOTBackEnd{}

        service = MonitorDaemon{
        # if true, will automatically start DQM thread in background
        	untracked bool AutoInstantiate=true
        # if >=0, upon a connection problem, the source will automatically
        # attempt to reconnect with a time delay (secs) specified here
        # (default: 5)
        	untracked int32 reconnect_delay = 5
        # collector hostname; examples:localhost(default),lxcmse2.cern.ch, etc
        	untracked string DestinationAddress = "lxplus001.cern.ch"
        # port for communicating with collector (default: 9090)
        	untracked int32 SendPort = 9090
        # monitoring period in ms (i.e. how often monitoring elements
        # are shipped to the collector; default: 1000)
        	untracked int32 UpdateDelay = 10
        # name of DQM source (default: DQMSource)
        	untracked string NameAsSource = "FU0"
        }
	
  
	module out = PoolOutputModule {
        	untracked string fileName ="RPCDQMdigi.root"
	}
	 
	path p = {rpcunpacker,rpcdigidqm}

}
