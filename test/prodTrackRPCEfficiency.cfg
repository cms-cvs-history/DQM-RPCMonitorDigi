process RPCEff = {
	source = PoolSource{
	untracked vstring fileNames ={
'/store/relval/2008/4/28/RelVal-RelValSingleMuPt10-1209247429-IDEAL_V1-2nd/0001/04660E79-0115-DD11-A59B-001D09F290D8.root',
'/store/relval/2008/4/28/RelVal-RelValSingleMuPt10-1209247429-IDEAL_V1-2nd/0001/5ECCCA2E-0615-DD11-8A55-000423D98800.root',
'/store/relval/2008/4/28/RelVal-RelValSingleMuPt10-1209247429-IDEAL_V1-2nd/0001/D0E48A2F-0615-DD11-89AE-000423D94C68.root'

		}

	untracked uint32 debugVebosity = 10
        untracked bool   debugFlag     = true
        }
	untracked PSet maxEvents = {untracked int32 input = -1}

        include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
	include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

#-------------------------------- Muon Geometry --------------------------------
	## DT Geometry
        include "Geometry/DTGeometry/data/dtGeometry.cfi"
	## CSC Geometry
	include "Geometry/CSCGeometry/data/cscGeometry.cfi"
	## RPC Geometry
        include "Geometry/RPCGeometry/data/rpcGeometry.cfi"
#------------------------------------ DT ---------------------------------------

	## _Vdrift1D_ ##
	include "RecoLocalMuon/DTRecHit/data/dt1DRecHits_ParamDrift.cfi"

	## _Vdrift2D_ ##
	include "RecoLocalMuon/DTSegment/data/dt2DSegments_CombPatternReco2D_ParamDrift.cfi"

	## _4DAlgo ##
	include "RecoLocalMuon/DTSegment/data/dt4DSegments_CombPatternReco4D_ParamDrift.cfi"


#------------------------------------ CSC --------------------------------------
	
	## 2D RecHit
	include "RecoLocalMuon/CSCRecHit/data/csc2DRecHits.cfi"

	## Segments
	include "RecoLocalMuon/CSCSegment/data/cscSegments.cfi"

#------------------------------------ RPC --------------------------------------


	# The module for 1D RPC RecHit building
	include "RecoLocalMuon/RPCRecHit/data/rpcRecHits.cfi"


       include "Geometry/CommonDetUnit/data/globalTrackingGeometry.cfi"
       include "MagneticField/Engine/data/uniformMagneticField.cfi"
       include "RecoMuon/DetLayers/data/muonDetLayerGeometry.cfi"

#################### StandAlone Muon Reco ######################################   


	# Seed generator Finder
	include "RecoMuon/MuonSeedGenerator/data/standAloneMuonSeeds.cff"

	# Standalone muon producer
	include "RecoMuon/StandAloneMuonProducer/data/standAloneMuons.cff"

	# to run only over DT and CSC measurements uncomment these cards

	replace standAloneMuons.STATrajBuilderParameters.RefitterParameters.EnableRPCMeasurement = false
	replace standAloneMuons.STATrajBuilderParameters.BWFilterParameters.EnableRPCMeasurement = false

#################### StandAlone Muon Reco ######################################


        include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagatorAny.cfi"
        include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagator.cfi"
        include "TrackPropagation/SteppingHelixPropagator/data/SteppingHelixPropagatorAlong.cfi"


################ RPC Efficiency From Track #####################################
   include "DQMServices/Core/data/DQM.cfg"
   replace DQM.collectorHost = "myhost"
   replace DQM.collectorPort = 9090
   replace DQM.debug = false

   service = ModuleWebRegistry {}

   module output = PoolOutputModule{
      untracked string fileName = "/tmp/groselli/cosTracks.root"
   }


   module rpcefftrack = RPCEfficiencyFromTrack{
	bool ReadEndCap = false
	bool ReadBarrel = true
	#Cut expressed in cm
	double EfficiencyCut = 4.
	untracked int32 wheel = 0
	string PropagatorName = "SteppingHelixPropagatorAny"
	untracked string trajectoryInput =  "standAloneMuons"
	untracked string rpcRecHitLabel = "rpcRecHits"
	bool AreCosmic = false
	untracked string EffRootFileName = "/tmp/groselli/RPCEfficiencyFromTrack.root"
	untracked string GlobalRootFileName ="/tmp/groselli/GlobalEfficiencyFromTrack.root"
   }

  #Complete path for Run starting From digis of all muon detectors
  path p = {dt1DRecHits, dt2DSegments, dt4DSegments, csc2DRecHits, cscSegments, MuonSeed, standAloneMuons, rpcefftrack}

  #If rechit, segments and track exists
  #path p = {rpcefftrack}
}
